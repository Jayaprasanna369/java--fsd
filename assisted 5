class Node {
    int data;
    Node next;

    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

class LinkedList {
    Node head;

    void deleteKey(int key) {
        Node temp = head, prev = null;

        // If the key is in the head node
        if (temp != null && temp.data == key) {
            head = temp.next;
            return;
        }

        // Search for the key to be deleted, keep track of the previous node
        while (temp != null && temp.data != key) {
            prev = temp;
            temp = temp.next;
        }

        // If the key is not present
        if (temp == null) {
            return;
        }

        // Unlink the node from the linked list
        prev.next = temp.next;
    }

    void printList() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
    }

    public static void main(String[] args) {
        LinkedList list = new LinkedList();

        list.head = new Node(1);
        list.head.next = new Node(2);
        list.head.next.next = new Node(3);
        list.head.next.next.next = new Node(4);

        System.out.println("Original linked list:");
        list.printList();

        int keyToDelete = 3;
        list.deleteKey(keyToDelete);

        System.out.println("\nLinked list after deleting key " + keyToDelete + ":");
        list.printList();
    }
}
