class Node {
    int data;
    Node next;
    Node prev;

    public Node(int data) {
        this.data = data;
        this.next = null;
        this.prev = null;
    }
}

class DoublyLinkedList {
    Node head;

    // Method to traverse the list forward
    public void traverseForward() {
        Node current = head;
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    // Method to traverse the list backward
    public void traverseBackward() {
        Node current = head;
        while (current.next != null) {
            current = current.next;
        }

        // Traverse backward from the last node
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.prev;
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        DoublyLinkedList dll = new DoublyLinkedList();
        dll.head = new Node(1);
        Node second = new Node(2);
        Node third = new Node(3);

        // Linking nodes
        dll.head.next = second;
        second.prev = dll.head;
        second.next = third;
        third.prev = second;

        // Traverse the list forward
        System.out.println("Forward traversal:");
        dll.traverseForward();

        // Traverse the list backward
        System.out.println("Backward traversal:");
        dll.traverseBackward();
    }
}
